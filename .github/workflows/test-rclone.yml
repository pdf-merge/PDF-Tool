name: test-rclone

on:
  workflow_dispatch:
    inputs:
      source_path:
        description: 'Source GDrive Path (gdrive1:)'
        required: true
        default: 'VS_Stock/'
      destination_path:
        description: 'Destination OneDrive Path (1drive:)'
        required: true
        default: 'Mirror'
      sync_method:
        description: 'Sync Method'
        required: true
        type: choice
        options:
          - direct
          - local
        default: 'direct'

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize Build Space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"

      - name: Install rclone
        run: |
          sudo apt-get update
          sudo apt-get install -y rclone

      - name: Configure rclone
        env:
          RCLONE_CONFIG_BASE64: ${{ secrets.RCLONE_CONF_BASE64 }}
        run: |
          mkdir -p ~/.config/rclone
          echo $RCLONE_CONFIG_BASE64 | base64 --decode > ~/.config/rclone/rclone.conf
          
      - name: Run Rclone Copy (Direct Method)
        if: github.event.inputs.sync_method == 'direct'
        run: |
          set -o pipefail
          echo "Starting Rclone (Direct Method): gdrive1:${{ github.event.inputs.source_path }} -> 1drive:${{ github.event.inputs.destination_path }}"
          rclone copy "gdrive1:${{ github.event.inputs.source_path }}" "1drive:${{ github.event.inputs.destination_path }}" \
            --verbose \
            --transfers 10 \
            --stats 10s \
            --stats-one-line \
            2>&1 | tee /dev/null

      - name: Run Rclone (Local Method)
        if: github.event.inputs.sync_method == 'local'
        run: |
          set -o pipefail
          echo "WARNING: Using local method. This may fail if data is larger than runner disk space."
          
          LOCAL_DIR="transfer_data"
          mkdir -p $LOCAL_DIR
          
          echo "Step 1: Downloading from gdrive1:${{ github.event.inputs.source_path }} to $LOCAL_DIR"
          rclone copy "gdrive1:${{ github.event.inputs.source_path }}" "$LOCAL_DIR" \
            --verbose \
            --transfers 10 \
            --stats 10s \
            --stats-one-line \
            2>&1 | tee /dev/null
          
          echo "Step 2: Uploading from $LOCAL_DIR to 1drive:${{ github.event.inputs.destination_path }}"
          rclone copy "$LOCAL_DIR" "1drive:${{ github.event.inputs.destination_path }}" \
            --verbose \
            --transfers 10 \
            --stats 10s \
            --stats-one-line \
            2>&1 | tee /dev/null
            
          echo "Step 3: Cleaning up $LOCAL_DIR"
          rm -rf $LOCAL_DIR

      - name: Send Telegram Notification
        if: always()
        uses: appleboy/telegram-action@master
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          format: markdown
          message: |
            *Rclone Job Finished*
            Status: `${{ job.status }}`
            Method: `${{ github.event.inputs.sync_method }}`
            Source: `gdrive1:${{ github.event.inputs.source_path }}`
            Destination: `1drive:${{ github.event.inputs.destination_path }}`
            Workflow: `${{ github.workflow }}`
            Run URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
